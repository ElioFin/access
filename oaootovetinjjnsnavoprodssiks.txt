1. Администрирование в СУБД Microsoft SQL Server. Создание и удаление баз данных. 

Администрирование в СУБД Microsoft SQL Server включает управление базами данных, их создание и удаление.
Создание базы данных: Используется команда CREATE DATABASE, например:
CREATE DATABASE MyDatabase;
Она создаёт новую базу данных с именем "MyDatabase".

Удаление базы данных: Применяется команда DROP DATABASE, например:
DROP DATABASE MyDatabase;
Эта команда полностью удаляет указанную базу данных и все её содержимое. Перед удалением важно убедиться, что база не используется.

Обе операции выполняются в среде SQL Server Management Studio (SSMS) или через T-SQL скрипты. Для администрирования требуются соответствующие права доступа.

2, 6, 7. Администрирование БД. Функции администратора баз данных

Администрирование баз данных (БД) — это комплекс задач по управлению, поддержанию и обеспечению работоспособности БД. Администратор баз данных (DBA) выполняет следующие ключевые функции:

Проектирование и создание БД: Определение структуры, создание таблиц, индексов и связей между данными.
Управление доступом: Настройка прав пользователей, ролей и обеспечение безопасности данных.
Резервное копирование и восстановление: Создание бэкапов для защиты данных и восстановление в случае сбоев.
Оптимизация производительности: Мониторинг запросов, настройка индексов и улучшение скорости работы БД.
Обновление и обслуживание: Установка патчей, обновление системы и контроль целостности данных.
Мониторинг и устранение неисправностей: Отслеживание ошибок, анализ логов и решение проблем.
Обеспечение безопасности: Защита от несанкционированного доступа, шифрование данных и аудит.

Эти функции обеспечивают надежность, доступность и эффективность работы баз данных в соответствии с потребностями пользователей и организаций.

3. Обеспечение безопасного доступа к общим файлам.

Обеспечение безопасного доступа к общим файлам — это процесс защиты данных при их совместном использовании. Основные подходы:

Аутентификация: Проверка личности пользователей через логины и пароли или многофакторную аутентификацию (MFA).
Управление правами доступа: Назначение ролей и разрешений (чтение, запись, редактирование) с использованием моделей, таких как NTFS или ACL (список контроля доступа).
Шифрование: Защита данных при передаче (например, через HTTPS, VPN) и хранении (AES-256).
Сетевая безопасность: Использование файрволов, ограничение доступа по IP и настройка защищённых протоколов (SFTP, SMB с шифрованием).
Журналирование и мониторинг: Ведение логов доступа и активности для выявления подозрительных действий.
Регулярное обновление: Установка патчей для устранения уязвимостей в ПО и системах.

Эти меры минимизируют риски несанкционированного доступа, утечек данных и обеспечивают конфиденциальность и целостность общих файлов.

4. Средства защиты данных в СУБД Microsoft SQL Server.

Также можно из 3 вытянуть.

Средства защиты данных в СУБД Microsoft SQL Server включают следующие механизмы:

Аутентификация: Поддержка Windows Authentication и SQL Server Authentication для проверки пользователей.
Управление доступом: Назначение ролей (db_owner, db_datareader) и разрешений (GRANT, DENY) на уровне базы, схемы или объекта.
Шифрование данных:
TDE (Transparent Data Encryption) для шифрования данных на диске.
Always Encrypted для защиты данных на уровне столбцов, даже при запросах.
SSL/TLS для шифрования передачи данных.
Маскирование данных: Dynamic Data Masking (DDM) скрывает конфиденциальные данные для пользователей без прав.
Аудит: Встроенные средства аудита (SQL Server Audit) для отслеживания действий с данными.
Резервное копирование: Шифрованные бэкапы для защиты данных при хранении.
Row-Level Security (RLS): Ограничение доступа к строкам таблицы на основе условий.

5. Настройка безопасности агента SQL

Для настройки безопасности агента SQL Server:

Обеспечить защиту на уровне столбцов: Используйте Always Encrypted для шифрования данных и трафика на уровне клиента.
Создать защиту на уровне строк (RLS): Ограничьте доступ, показывая пользователям только разрешенные записи.
Сделать прозрачное шифрование файлов (TDE): Зашифруйте неактивные файлы и бэкапы для защиты.
Проводить регулярный аудит: Отслеживайте действия с критическими данными.
Всегда выполнять удостоверение и проверку подлинности: Применяйте Windows и SQL Server аутентификацию, сложные пароли и минимальные права.
Использовать временные таблицы: Храните старые версии данных для анализа и восстановления.

8. Настройка текущего обслуживания баз данных

Для настройки текущего обслуживания баз данных в SQL Server используйте планы обслуживания в SSMS:

Откройте SSMS, перейдите в «Управление» → «Планы обслуживания», создайте новый план с именем.
В конструкторе настройте вложенные планы: задайте имя, описание, расписание.
Из «Панели элементов» добавьте задачи:
Проверка целостности: Укажите базу, настройте параметры.
Перестроение индекса: Настройте для базы, выполняется после проверки.
Обновление статистики: Выберите базу, выполняется последней.

Фулл на скрине пон

9. Основные принципы структуризации и нормализации базы данных.

Основные принципы структуризации и нормализации базы данных направлены на организацию данных для минимизации избыточности и обеспечения целостности. Вот ключевые аспекты:


Структуризация БД
Логическая организация: Данные делятся на таблицы, каждая из которых представляет отдельную сущность (например, "Клиенты", "Заказы").

Уникальность записей: Каждая таблица имеет первичный ключ (Primary Key) для идентификации строк.

Связи между таблицами: Используются внешние ключи (Foreign Keys) для связывания данных между таблицами.

Избежание дублирования: Данные хранятся в одном месте, а не повторяются.


Нормализация БД
Нормализация — процесс приведения БД к нормальным формам (НФ) для устранения аномалий при добавлении, удалении или изменении данных:

1НФ (Первая нормальная форма):
Устранение повторяющихся групп.
Все значения атомарны (неделимы).

2НФ (Вторая нормальная форма):
Соответствие 1НФ.
Устранение частичной зависимости: все неключевые атрибуты зависят от всего первичного ключа.

3НФ (Третья нормальная форма):
Соответствие 2НФ.
Устранение транзитивной зависимости: неключевые атрибуты зависят только от первичного ключа, а не от других атрибутов.


Пример
Ненормализованная таблица: "Заказы" (Номер заказа, Клиент, Товары).
После 1НФ: Разделение на "Заказы" (Номер, Клиент) и "Товары в заказе" (Номер заказа, Товар).

После 2НФ и 3НФ: Добавление таблицы "Клиенты" (ID клиента, Имя) для исключения дублирования данных о клиентах.

Эти принципы повышают эффективность, упрощают поддержку и предотвращают ошибки в данных.


10. Автоматизация управления SQL

Для автоматизации управления SQL Server можно использовать следующие инструменты:

Функция Generate Scripts в SSMS. Позволяет быстро создать скрипт базы данных. Для этого нужно щёлкнуть правой кнопкой мыши на базе данных, выбрать вариант «Задачи», а затем — «Создать скрипты».

Утилита SchemaZen. Это инструмент командной строки, который позволяет экспортировать базу данных в удобном для систем контроля версий виде. Для создания скриптов нужно применять команду schemazen.exe script, а для восстановления базы данных из скриптов — команду schemazen.exe create.

Инструменты вроде SMOscript. Они генерируют отдельные скрипты для каждого объекта базы данных, обеспечивая высокий уровень контроля и детализации.

Для автоматизации рутинных операций администрирования баз данных также можно использовать SQL Server Agent. С его помощью можно, например, запускать, мониторить и журналировать процедуры резервного копирования, запускать исполняемые программы или утилиты, выполнять задачи при репликации.